<%#
# Index

This view is the template for the index page.
It is responsible for rendering the search bar, header and pagination.
It renders the `_table` partial to display details about the resources.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Collection][1].
  Contains helper methods to help display a table,
  and knows which attributes should be displayed in the resource's table.
- `resources`:
  An instance of `ActiveRecord::Relation` containing the resources
  that match the user's search criteria.
  By default, these resources are passed to the table partial to be displayed.
- `search_term`:
  A string containing the term the user has searched for, if any.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Collection
%>

<% content_for(:title) do %>
  <%= display_resource_name(page.resource_name) %>
<% end %>

<% content_for :filters do %>
  <%= render 'filters' %>
<% end %>

<header class="header">
  <h1 class="header__heading" id="page-title"><%= content_for(:title) %></h1>
  <div class="header__info">
    <%= page_entries_info resources %>
    <%= paginate resources %>
  </div>
  <div class="header__actions">
    <%= link_to(
      "#{t("administrate.actions.new")} #{page.resource_name.titleize.downcase}",
      [:new, namespace, page.resource_path],
      class: "button",
    ) %>
    <% page.collection_actions.each do |name, url, html_options = {}| %>
      <% html_options[:class] = html_options.fetch(:class, '').split(/\s+/).append('button').join(' ') %>
      <% unless url.is_a?(String) %>
        <% options = url.last.is_a?(Hash) ? url.pop : {} %>
        <% url = polymorphic_path(url, options) %>
      <% end %>
      <%= link_to name, url, html_options %>
    <% end %>
  </div>
</header>

<%= render "collection", collection_presenter: page, resources: resources %>
