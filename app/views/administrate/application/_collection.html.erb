<%#
# Collection

This partial is used on the `index` and `show` pages
to display a collection of resources in an HTML table.

## Local variables:

- `collection_presenter`:
  An instance of [Administrate::Page::Collection][1].
  The table presenter uses `ResourceDashboard::COLLECTION_ATTRIBUTES` to determine
  the columns displayed in the table
- `resources`:
  An ActiveModel::Relation collection of resources to be displayed in the table.
  By default, the number of resources is limited by pagination
  or by a hard limit to prevent excessive page load times

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Collection
%>

<div class="table__wrapper">
  <table class="collection-data" aria-labelledby="page-title">
    <thead>
      <tr>
        <th class="cell-label" scope="col">Actions</th>
        <% collection_presenter.attribute_types.each do |attr_name, attr_type| %>
          <% ordered_html_class = collection_presenter.ordered_html_class(attr_name) %>
          <th class="cell-label
                     cell-label--<%= attr_type.html_class %>
                     cell-label--<%= attr_name.to_s.dasherize %>
                     <%= "cell-label--#{ordered_html_class}" if ordered_html_class %>"
              scope="col"
          >
            <%= link_to(sanitized_order_params.merge(collection_presenter.order_params_for(attr_name))) do %>
              <%= t(
                "helpers.label.#{collection_presenter.resource_name}.#{attr_name}",
                default: attr_name.to_s
              ).titleize %>
              <% if collection_presenter.ordered_by?(attr_name) %>
                <span class="cell-label__sort-indicator cell-label__sort-indicator--<%= collection_presenter.ordered_html_class(attr_name) %>">
                  <svg aria-hidden="true">
                    <use xlink:href="#icon-up-caret" />
                  </svg>
                </span>
              <% end %>
            <% end %>
          </th>
        <% end %>
      </tr>
    </thead>

    <tbody>
      <% resources.each do |resource| %>
        <tr class="table__row <%= collection_presenter.resource_html_class(resource) -%>"
            role="link"
            tabindex="0"
        >
          <td>
            <%= link_to(
              t("administrate.actions.show"),
              [namespace, resource],
              class: "table__action table__action--show"
            ) %>
            <%= link_to(
              t("administrate.actions.edit"),
              [:edit, namespace, resource],
              class: "table__action table__action--edit"
            ) %>
            <%= link_to(
              t("administrate.actions.destroy"),
              [namespace, resource],
              class: "table__action table__action--destroy",
              method: :delete,
              data: { confirm: t("administrate.actions.confirm") }
            ) %>
            <% collection_presenter.resource_actions(resource).each do |name, url, html_options = {}| %>
              <% html_options[:class] = html_options.fetch(:class, '').split(/\s+/).append('table__action').join(' ') %>
              <% unless url.is_a?(String) %>
                <% options = url.last.is_a?(Hash) ? url.pop : {} %>
                <% url = polymorphic_path(url, options) %>
              <% end %>
              <%= link_to name, url, html_options %>
            <% end %>
          </td>
          <% attributes = collection_presenter.attributes_for(resource) %>
          <% cache cache_key(resource, attributes) do %>
            <% attributes.each do |attribute| %>
              <td class="cell-data
                         cell-data--<%= attribute.name.dasherize %>
                         cell-data--<%= attribute.html_class %>">
                <%= render_field attribute %>
              </td>
            <% end %>
          <% end %>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>
